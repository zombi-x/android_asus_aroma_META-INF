# ZOMBi-POP Installer
set_progress(0.0);
ui_print("Thank you for installing TF700T ZOMBi-POP 5.1.1!");
ui_print("Sit back and relax...");
ui_print("-----------------------------------------------------");
ui_print("This will take a few minutes!");

show_progress(0.99, 1550);

# sbdags Installation
if
	file_getprop("/tmp/aroma-data/autoinstall.prop","preset") == "sbdags"
then
	ui_print("Loading sbdags Installation Config Files.....");
	package_extract_dir("extras/aroma/preset/sbdags", "/tmp/aroma-data");
	package_extract_dir("extras/aroma/preset/sbdags", "/data/media/0/zombi/preset/previous");
endif;

# OMNI Installation
if
	file_getprop("/tmp/aroma-data/autoinstall.prop","preset") == "omni"
then
	ui_print("Loading OMNI Installation Config Files.....");
	package_extract_dir("extras/aroma/preset/omni", "/tmp/aroma-data");
	package_extract_dir("extras/aroma/preset/omni", "/data/media/0/zombi/preset/previous");
endif;

ui_print("Preparing File System.....");
package_extract_dir("extras/prep", "/tmp");
set_perm_recursive(0, 0, 0755, 0755, "/tmp");

ui_print("Mounting System.....");
run_program("/sbin/busybox", "mount", "/system");

# Mount Data2sd
if
    file_getprop("/tmp/aroma-data/kernel.prop","selected.2") == "2"
then
	# Switch TWRP node to External for DATA2SD
	ui_print("----- DATA2SD by _that@xda and sbdags -----");
	ui_print("Extracting.....");
	package_extract_dir("extras/kernel/data2sd/script", "/tmp");
	set_perm(0, 0, 0755, "/tmp/dev-data2sd.sh");
	run_program("/sbin/umount", "-d", "/data");
	ui_print("Running script for DATA2SD");
	run_program("/tmp/dev-data2sd.sh");
endif;

# Mount Rom2sd
if
    file_getprop("/tmp/aroma-data/kernel.prop","selected.2") == "3"
then
	# Extract busybox to /system/boot
	ui_print("----- ROM2SD by _that@xda and sbdags -----");
	ui_print("Installing Static Busybox for ROM2SD");
	package_extract_dir("extras/kernel/static_busybox/system", "/system");
	set_perm(0, 0, 0744, "/system/boot/busybox");
	# Install _that kernel modules to internal if stock rom upgrade needed
	if
		file_getprop("/tmp/aroma-data/that.prop","upgrade") == "yes"
	then
		ui_print("_that stock modules copied to Internal ROM");
		delete("/system/lib/modules");
		package_extract_dir("extras/kernel/thatcm11/system", "/system");
	endif;
	# _that kernel preinit.cfg setup for ROM2SD
	if
		file_getprop("/tmp/aroma-data/kernel.prop","selected.1") != "5"
	then
		# _that10 preinit
		ui_print("Installing _that10 pre-init config for ROM2SD");
		package_extract_dir("extras/kernel/rom2sd/system", "/system");
		package_extract_dir("extras/kernel/preinit", "/system");
		set_perm(0, 0, 0744, "/system/boot/preinit");
		set_perm_recursive(0, 0, 0755, 0755, "/system/boot/preinit.d");
		if
			file_getprop("/tmp/aroma-data/kernel.prop","selected.1") == "4"
		then
			# Additional preinit scripts
			ui_print(" - Additional_that internal pre-init scripts");
			package_extract_dir("extras/kernel/thatcm11/preinit/boot/preinit.d", "/system/boot/preinit.d");
			set_perm_recursive(0, 0, 0755, 0755, "/system/boot/preinit.d");
			ui_print(" - /system/boot/preinit.cfg preparation");
			# _that kernel CPU Performance
			ui_print(" - Performance Mode:");
			if
				file_getprop("/tmp/aroma-data/cpu.prop","performance") == "p1800"
			then
				# 1800
				ui_print("   - 1.8GHz");
				package_extract_dir("extras/cpu/p1800", "/tmp");
			endif;
			if
				file_getprop("/tmp/aroma-data/cpu.prop","performance") == "p1700"
			then
				# 1700
				ui_print("   - 1.7GHz");
				package_extract_dir("extras/cpu/p1700", "/tmp");
			endif;
			if
				file_getprop("/tmp/aroma-data/cpu.prop","performance") == "p1600"
			then
				# 1600
				ui_print("   - 1.6GHz");
				package_extract_dir("extras/cpu/p1600", "/tmp");
			endif;
			if
				file_getprop("/tmp/aroma-data/cpu.prop","performance") == "p1500"
			then
				# 1500
				ui_print("   - 1.5GHz");
				package_extract_dir("extras/cpu/p1500", "/tmp");
			endif;
			if
				file_getprop("/tmp/aroma-data/cpu.prop","performance") == "p1400"
			then
				# 1400
				ui_print("   - 1.4GHz");
				package_extract_dir("extras/cpu/p1400", "/tmp");
			endif;
			if
				file_getprop("/tmp/aroma-data/cpu.prop","performance") == "p1300"
			then
				# 1300
				ui_print("   - 1.3GHz");
				package_extract_dir("extras/cpu/p1300", "/tmp");
			endif;
			
			# _that kernel OC Switch
			if
				file_getprop("/tmp/aroma-data/cpu.prop","poc") == "1"
			then
				# OC Enabled
				ui_print("   - OC Enabled");
				package_extract_dir("extras/cpu/cpuoc", "/tmp");
			else
				# OC Disabled
				ui_print("   - OC Disabled");
				package_extract_dir("extras/cpu/cpunoc", "/tmp");
			endif;
			
			# Amend the preinit.cfg file with chosen speeds
			set_perm(0, 0, 0777, "/tmp/cpup.sh");
			run_program ("/tmp/cpup.sh");
			set_perm(0, 0, 0777, "/tmp/cpuoc.sh");
			run_program ("/tmp/cpuoc.sh");
		endif;
	endif;
	# Copy modules from internal kernel install to /tmp
	ui_print("Copying Wifi/Bluetooth modules for ROM2SD");
	package_extract_dir("extras/kernel/rom2sd/modules", "/tmp");
	set_perm(0, 0, 0755, "/tmp/copy_modules.sh");
	run_program("/tmp/copy_modules.sh");
	# Switch TWRP nodes to External for ROM2SD
	ui_print("Extracting scripts.....");
	package_extract_dir("extras/kernel/rom2sd/script", "/tmp");
	set_perm(0, 0, 0755, "/tmp/dev-rom2sd.sh");
	run_program("/sbin/umount", "-d", "/system");
	run_program("/sbin/umount", "-d", "/data");
	ui_print("Running script for ROM2SD");
	run_program("/tmp/dev-rom2sd.sh");
endif;

# Unmount all partition to prepare for tuning
unmount("/system");
unmount("/data");

ui_print("Formatting System.....");
format("ext4", "EMMC", "/dev/block/mmcblk0p1", "0", "/system");
run_program("/sbin/busybox", "mount", "/system");

# Journaling and Tuning
if
    file_getprop("/tmp/aroma-data/journal.prop","journal") != "f2fs"
then
	if
		file_getprop("/tmp/aroma-data/journal.prop","journal") == "djon"
	then
		ui_print("Tuning Data - Journaling Enabled.....");
		run_program("/tmp/tune2fs.ext4", "-O", "+has_journal", "-o", "+journal_data_writeback", "/dev/block/mmcblk0p8");
	else
		ui_print("Tuning Data - Journaling Disabled.....");
		run_program("/tmp/tune2fs.ext4", "-O", "^has_journal", "/dev/block/mmcblk0p8");
	endif;
else
	ui_print("Tuning Data - Ignoring as F2FS.....");
endif;

ui_print("Tuning System.....");
run_program("/tmp/tune2fs.ext4", "-O", "+has_journal", "-o", "+journal_data_writeback", "/dev/block/mmcblk0p1");

# Remount /data
ui_print("Remounting Data.....");
	# Attempt to mount /data to ext4
	#mount("ext4", "EMMC", "/dev/block/mmcblk0p8", "/data");
# else
	# Attempt to mount /data to f2fs
	#mount("f2fs", "EMMC", "/dev/block/mmcblk0p8", "/data");
run_program("/sbin/mount", "/data");

# Wipe Caches
if
    file_getprop("/tmp/aroma-data/wipe.prop","selected") == "1"
then
    ui_print("Wiping Dalvik-cache.....");
    delete_recursive("/data/dalvik-cache");
endif;
ui_print("Wiping Cache.....");
delete_recursive("/cache");

# Install System
ui_print("Installing Core System Files.....");
package_extract_dir("system", "/system");

# Clean up some apps
ui_print("Cleaning apps and scripts.....");
#delete("/system/priv-app/TeleService.apk");
delete_recursive("/system/app/Calendar");
#delete_recursive("/system/priv-app/CalendarProvider");
delete("/system/etc/init.d/90userinit");
delete_recursive("/system/addon.d");
# Delete basic GAPPS
delete_recursive("/data/app/com.android.vending-1");
delete_recursive("/data/app/com.android.vending-2");
delete_recursive("/data/app/com.google.android.gms-1");
delete_recursive("/data/app/com.google.android.gms-2");

# Install TF300 system
if
	file_getprop("/tmp/aroma-data/device.prop","device") == "TF300T"
then
	delete_recursive("/system/etc/firmware/touch");
	delete("/system/etc/firmware/bcm4330.hcd");
	delete("/system/etc/model_frontal.xml");
	delete("/system/etc/nvram_4330.txt");
	delete_recursive("/system/lib/hw");
	delete("/system/lib/libmllite3050.so");
	delete("/system/lib/libmlplatform3050.so");
	delete("/system/etc/firmware/camera/04-RS_M6Mo.bin");
	package_extract_dir("extras/device/tf300/system", "/system");
endif;

# Install TF201 system
if
	file_getprop("/tmp/aroma-data/device.prop","device") == "TF201T"
then
	package_extract_dir("extras/device/tf201/system", "/system");
endif;

# Install Options Chosen
ui_print("Installing Options.....");

# Install Zombi-POP System Tweaks
ui_print("Installing ZOMBi-POP System Tweaks.....");
package_extract_dir("extras/zombipop/tweakzom/system", "/system");
ui_print(" - ZOMBi-POP Touch Screen Tweaks");
package_extract_dir("extras/zombipop/build-prop", "/tmp");
set_perm(0, 0, 0777, "/tmp/zombipop-build-prop.sh");
run_program ("/tmp/zombipop-build-prop.sh");

#-- Kernel --#
ui_print("Kernel and Modules");
if
	file_getprop("/tmp/aroma-data/kernel.prop","selected.1") == "1"
then
	ui_print(" - Grimlock Omni Modded Kernel");
	package_extract_dir("extras/kernel/grimlock/system", "/system");
	package_extract_file("grimzombi511.blob", "/dev/block/mmcblk0p4");
endif;
if
	file_getprop("/tmp/aroma-data/kernel.prop","selected.1") == "2"
then
	ui_print(" - Grimlock Lite Omni Kernel");
	package_extract_dir("extras/kernel/grimlock/system", "/system");
	package_extract_file("grimzombil511.blob", "/dev/block/mmcblk0p4");
endif;
if
	file_getprop("/tmp/aroma-data/kernel.prop","selected.1") == "3"
then
	ui_print(" - Omni Kernel");
	package_extract_dir("extras/kernel/omni/system", "/system");
	package_extract_file("omni511.blob", "/dev/block/mmcblk0p4");
endif;
if
	file_getprop("/tmp/aroma-data/kernel.prop","selected.1") == "4"
then
	ui_print(" - _that Omni Modded Kernel");
	package_extract_dir("extras/kernel/thatcm11/system", "/system");
	package_extract_file("bootinit115.blob", "/dev/block/mmcblk0p4");
endif;
if
	file_getprop("/tmp/aroma-data/kernel.prop","selected.1") == "5"
then
	ui_print(" - No Kernel to Flash");
endif;

#-- DPI --#
ui_print("DPI Preparation");
if
	file_getprop("/tmp/aroma-data/dpi.prop","DPI") == "136"
then
	ui_print(" - 136 DPI");
	package_extract_dir("extras/dpi/136", "/tmp");
endif;
if
	file_getprop("/tmp/aroma-data/dpi.prop","DPI") == "148"
then
	ui_print(" - 148 DPI");
	package_extract_dir("extras/dpi/148", "/tmp");
endif;
if
	file_getprop("/tmp/aroma-data/dpi.prop","DPI") == "160"
then
	ui_print(" - 160 DPI");
	package_extract_dir("extras/dpi/160", "/tmp");
endif;
if
	file_getprop("/tmp/aroma-data/dpi.prop","DPI") == "240"
then
	ui_print(" - 240 DPI");
	package_extract_dir("extras/dpi/240", "/tmp");
endif;
if
	file_getprop("/tmp/aroma-data/dpi.prop","DPI") == "224"
then
	ui_print(" - 224 DPI");
	package_extract_dir("extras/dpi/224", "/tmp");
endif;
if
	file_getprop("/tmp/aroma-data/dpi.prop","DPI") == "213"
then
	ui_print(" - 213 DPI");
	package_extract_dir("extras/dpi/213", "/tmp");
endif;
if
	file_getprop("/tmp/aroma-data/dpi.prop","DPI") == "200"
then
	ui_print(" - 200 DPI");
	package_extract_dir("extras/dpi/200", "/tmp");
endif;
if
	file_getprop("/tmp/aroma-data/dpi.prop","DPI") == "180"
then
	ui_print(" - 180 DPI");
	package_extract_dir("extras/dpi/180", "/tmp");
endif;
set_perm(0, 0, 0777, "/tmp/upd-build-prop.sh");

#-- RES --#
	ui_print("Resolution Preparation");
#TF700 Resolutions
if
	file_getprop("/tmp/aroma-data/res.prop","RES") == "1920"
then
	ui_print(" - Default Resolution");
	package_extract_dir("extras/res/1920/script", "/tmp");
	package_extract_dir("extras/res/1920/system", "/system");
endif;
if
	file_getprop("/tmp/aroma-data/res.prop","RES") == "1760"
then
	ui_print(" - 1760x1100 res");
	package_extract_dir("extras/res/1760/script", "/tmp");
	package_extract_dir("extras/res/1760/system", "/system");
endif;
if
	file_getprop("/tmp/aroma-data/res.prop","RES") == "1600"
then
	ui_print(" - 1600x1000 res");
	package_extract_dir("extras/res/1600/script", "/tmp");
	package_extract_dir("extras/res/1600/system", "/system");
endif;
if
	file_getprop("/tmp/aroma-data/res.prop","RES") == "1440"
then
	ui_print(" - 1440x900 res");
	package_extract_dir("extras/res/1440/script", "/tmp");
	package_extract_dir("extras/res/1440/system", "/system");
endif;
if
	file_getprop("/tmp/aroma-data/res.prop","RES") == "1280"
then
	ui_print(" - 1280x800 res");
	package_extract_dir("extras/res/1280/script", "/tmp");
	package_extract_dir("extras/res/1280/system", "/system");
endif;
set_perm(0, 0, 0777, "/tmp/res-build-prop.sh");

# If device is TF300 or TF201 then apply the default 99RES then remove it :)
if
	file_getprop("/tmp/aroma-data/device.prop","device") != "TF700T"
then
	delete("/tmp/res-build-prop.sh");
	delete("/system/res-build-prop.sh");
endif;
#-- Boot Animations --#
ui_print("Boot Animation");
if
    file_getprop("/tmp/aroma-data/boot.prop","boot") == "zombi"
then
	ui_print(" - ZOMBi-POP");
endif;
if
    file_getprop("/tmp/aroma-data/boot.prop","boot") == "androidl"
then
	ui_print(" - Android-L");
    package_extract_dir("extras/boot/androidl", "/system");
endif;
if
    file_getprop("/tmp/aroma-data/boot.prop","boot") == "nexusflow"
then
	ui_print(" - Google Nexus Flow");
    package_extract_dir("extras/boot/nexusflow", "/system");
endif;
if
    file_getprop("/tmp/aroma-data/boot.prop","boot") == "unknownp"
then
	ui_print(" - Unknown Pleasures");
    package_extract_dir("extras/boot/unknownp", "/system");
endif;

#-- Launchers --#
ui_print("Launcher");
if
    file_getprop("/tmp/aroma-data/launcher.prop","omni") == "1"
then
	ui_print(" - Omni Launcher");
else
	delete_recursive("/system/app/Launcher3");
endif;
if
    file_getprop("/tmp/aroma-data/launcher.prop","gel") == "1"
then
	ui_print(" - Google Experience Launcher");
    package_extract_dir("extras/launchers/gel", "/system");
endif;
if
    file_getprop("/tmp/aroma-data/launcher.prop","apex") == "1"
then
	ui_print(" - Apex Launcher");
    package_extract_dir("extras/launchers/apex", "/system");
endif;
if
    file_getprop("/tmp/aroma-data/launcher.prop","nova") == "1"
then
	ui_print(" - Nova Launcher");
    package_extract_dir("extras/launchers/nova", "/system");
endif;

#-- Google Apps --#
ui_print("");
ui_print("Google Apps");

if
    file_getprop("/tmp/aroma-data/gappops.prop","GAPPOPS") == "gappsnone"
then
	ui_print(" - Skipping Google Apps");
	delete_recursive("/system/app/Galaxy4");
	delete_recursive("/system/app/HoloSpiralWallpaper");
	delete_recursive("/system/app/LiveWallpapers");
	delete_recursive("/system/app/PhaseBeam");
	delete_recursive("/system/app/NoiseField");
	delete_recursive("/system/app/VisualizationWallpapers");
	delete_recursive("/data/app/com.google.android.calendar-1");
	delete_recursive("/data/app/com.google.android.calendar-2");
	delete_recursive("/data/app/com.google.android.googlequicksearchbox-1");
	delete_recursive("/data/app/com.google.android.googlequicksearchbox-2");
	delete_recursive("/data/app/com.google.android.music-1");
	delete_recursive("/data/app/com.google.android.music-2");
	delete_recursive("/data/app/com.google.android.apps.genie.geniewidget");
	delete_recursive("/data/app/com.google.android.apps.genie.geniewidget-2");
	delete_recursive("/data/app/com.google.android.youtube-1");
	delete_recursive("/data/app/com.google.android.youtube-2");
	delete_recursive("/data/app/com.google.android.apps.maps-1");
	delete_recursive("/data/app/com.google.android.apps.maps-2");
	delete_recursive("/data/app/com.google.android.gm-1");
	delete_recursive("/data/app/com.google.android.gm-2");
	delete_recursive("/data/app/com.google.android.talk-1");
	delete_recursive("/data/app/com.google.android.talk-2");
	delete_recursive("/data/app/com.google.android.tts-1");
	delete_recursive("/data/app/com.google.android.tts-2");

else
	ui_print(" - Google Core Libraries and Play Store to /system");
	package_extract_dir("extras/gapps/default", "/system");
	ui_print(" - Optional Google Apps to /system");
	if
		file_getprop("/tmp/aroma-data/google.prop","calendar") == "1"
	then
		ui_print(" - Google Calendar");
		package_extract_dir("extras/gapps/calendar", "/system");
	else
		delete_recursive("/data/app/com.google.android.calendar-1");
		delete_recursive("/data/app/com.google.android.calendar-2");
	endif;
	if
		file_getprop("/tmp/aroma-data/google.prop","now") == "1"
	then
		ui_print(" - Google Now and Voice Search");
		package_extract_dir("extras/gapps/search", "/system");
	else
		delete_recursive("/data/app/com.google.android.googlequicksearchbox-1");
		delete_recursive("/data/app/com.google.android.googlequicksearchbox-2");
	endif;
	if
		file_getprop("/tmp/aroma-data/google.prop","music") == "1"
	then
		ui_print(" - Google Music");
		package_extract_dir("extras/gapps/music", "/system");
	else
		delete_recursive("/data/app/com.google.android.music-1");
		delete_recursive("/data/app/com.google.android.music-2");
	endif;
	if
		file_getprop("/tmp/aroma-data/google.prop","newsweather") == "1"
	then
		ui_print(" - Google News and Weather");
		package_extract_dir("extras/gapps/newsweather", "/system");
	else
		delete_recursive("/data/app/com.google.android.apps.genie.geniewidget");
		delete_recursive("/data/app/com.google.android.apps.genie.geniewidget-2");
	endif;
	if
		file_getprop("/tmp/aroma-data/google.prop","youtube") == "1"
	then
		ui_print(" - YouTube");
		package_extract_dir("extras/gapps/youtube", "/system");
	else
		delete_recursive("/data/app/com.google.android.youtube-1");
		delete_recursive("/data/app/com.google.android.youtube-2");
	endif;
	if
		file_getprop("/tmp/aroma-data/google.prop","maps") == "1"
	then
		ui_print(" - Google Maps");
		package_extract_dir("extras/gapps/maps", "/system");
	else
		delete_recursive("/data/app/com.google.android.apps.maps-1");
		delete_recursive("/data/app/com.google.android.apps.maps-2");
	endif;
	if
		file_getprop("/tmp/aroma-data/google.prop","mail") == "1"
	then
		ui_print(" - Google Mail");
		package_extract_dir("extras/gapps/gmail", "/system");
	else
		delete_recursive("/data/app/com.google.android.gm-1");
		delete_recursive("/data/app/com.google.android.gm-2");
	endif;
	if
		file_getprop("/tmp/aroma-data/google.prop","hangouts") == "1"
	then
		ui_print(" - Google Hangouts");
		package_extract_dir("extras/gapps/hangouts", "/system");
	else
		delete_recursive("/data/app/com.google.android.talk-1");
		delete_recursive("/data/app/com.google.android.talk-2");
	endif;
	if
		file_getprop("/tmp/aroma-data/google.prop","tts") == "1"
	then
		ui_print(" - Google TTS");
		package_extract_dir("extras/gapps/tts", "/system");
	else
		delete_recursive("/data/app/com.google.android.tts-1");
		delete_recursive("/data/app/com.google.android.tts-2");
	endif;
	
	# Remove apps
	if
		file_getprop("/tmp/aroma-data/google.prop","livewalls") == "1"
	then
		ui_print(" - Google Live Wallpapers");
	else
		delete_recursive("/system/app/Galaxy4");
		delete_recursive("/system/app/HoloSpiralWallpaper");
		delete_recursive("/system/app/LiveWallpapers");
		delete_recursive("/system/app/PhaseBeam");
		delete_recursive("/system/app/NoiseField");
		delete_recursive("/system/app/VisualizationWallpapers");
	endif;
endif;

#-- Misc Apps --#
ui_print("");
ui_print("Misc Apps");
if
    file_getprop("/tmp/aroma-data/misc.prop","esfe") == "1"
then
	ui_print(" - ES File Explorer");
    package_extract_dir("extras/misc/es", "/system");
endif;
if
    file_getprop("/tmp/aroma-data/misc.prop","adaway") == "1"
then
	ui_print(" - AdAway installed");
    package_extract_dir("extras/misc/adaway", "/system");
endif;
if
    file_getprop("/tmp/aroma-data/misc.prop","viper") == "1"
then
	ui_print(" - Viper4Android FX installed");
    package_extract_dir("extras/misc/viper", "/system");
    delete_recursive("/system/app/DSPManager");
endif;
if
    file_getprop("/tmp/aroma-data/misc.prop","term") == "1"
then
	ui_print(" - Terminal Emulator");
	package_extract_dir("extras/misc/term", "/system");
endif;

#-- Browsers --#
ui_print("");
ui_print("Web Browsers");
if
    file_getprop("/tmp/aroma-data/browser.prop","aospbrowser") == "0"
then
	ui_print(" - Removed Stock Browser");
    delete_recursive("/system/app/Browser");
else
	ui_print(" - Android Stock Browser");
endif;

#-- Tweaks --#
ui_print("");
ui_print("Tweaks and Scripts");

if
	file_getprop("/tmp/aroma-data/tweak.prop","b2r") == "1"
then
	ui_print(" - Browser2RAM enabled");
    package_extract_dir("extras/tweak/b2r", "/system");
endif;

if
    file_getprop("/tmp/aroma-data/tweak.prop","adblock") == "1"
then
	ui_print(" - Ad Blocker enabled");
    package_extract_dir("extras/tweak/adblock", "/system");
endif;
if
    file_getprop("/tmp/aroma/tweak.prop","fsync") == "1"
then
	ui_print(" - fsync disabled");
    package_extract_dir("extras/tweak/fsync", "/system");
endif;
if
    file_getprop("/tmp/aroma-data/tweak.prop","zipalign") == "1"
then
	ui_print(" - Zip Align & SQL Lite Script installed");
    package_extract_dir("extras/tweak/zipalign", "/system");
	delete("/data/zipalign.db");
endif;
if
    file_getprop("/tmp/aroma-data/tweak.prop","gpu1") == "1"
then
	ui_print(" - Software Rendering disabled");
    package_extract_dir("extras/tweak/gpu/system", "/system");
    delete("/system/lib/egl/libGLES_android.so");
    delete("/system/lib/egl/libEGL_perfhud.so");
    delete("/system/lib/egl/libGLESv1_CM_perfhud.so");
    delete("/system/lib/egl/libGLESv2_perfhud.so");
endif;
if
    file_getprop("/tmp/aroma-data/tweak.prop","gpu2") == "1"
then
	ui_print(" - Force GPU 2D Rendering");
	package_extract_dir("extras/tweak/gpu/script", "/tmp");
	set_perm(0, 0, 0777, "/tmp/force-gpu.sh");
	run_program ("/sbin/sh", "/tmp/force-gpu.sh");
endif;
if
	file_getprop("/tmp/aroma-data/tweak.prop","cpu") == "1"
then
	ui_print(" - ZOMBi-POP Basic CPU Tweaks");
	package_extract_dir("extras/zombipop/tweaksbas/system", "/system");
endif;
if
	file_getprop("/tmp/aroma-data/tweak.prop","ext") == "1"
then
	ui_print(" - ZOMBi-POP Extended Kernel Tweaks");
	package_extract_dir("extras/zombipop/tweaksext/system", "/system");
endif;

#-- DPI --#
ui_print("Editing build.prop.....");
run_program ("/tmp/upd-build-prop.sh");
if
	file_getprop("/tmp/aroma-data/device.prop","device") == "TF700T"
then
	run_program ("/tmp/res-build-prop.sh");
endif;

#-- Install SU files --#
package_extract_dir("extras/superuser/system", "/system");

#-- Build Sym Links --#
ui_print("");
ui_print("Building symlinks.....");
symlink("/system/lib/libbluetooth_jni.so", "/system/app/Bluetooth/lib/arm/libbluetooth_jni.so");
symlink("/system/lib/libdefcontainer_jni.so", "/system/priv-app/DefaultContainerService/lib/arm/libdefcontainer_jni.so");
symlink("/system/lib/libjni_eglfence.so", "/system/app/Gallery2/lib/arm/libjni_eglfence.so");
symlink("/system/lib/libjni_filtershow_filters.so", "/system/app/Gallery2/lib/arm/libjni_filtershow_filters.so");
symlink("/system/lib/libjni_jpegstream.so", "/system/app/Gallery2/lib/arm/libjni_jpegstream.so");
symlink("/system/lib/libjni_jpegutil.so", "/system/app/Camera2/lib/arm/libjni_jpegutil.so");
symlink("/system/lib/libjni_latinime.so", "/system/app/LatinIME/lib/arm/libjni_latinime.so");
symlink("/system/lib/libjni_pacprocessor.so", "/system/app/PacProcessor/lib/arm/libjni_pacprocessor.so");
symlink("/system/lib/libjni_tinyplanet.so", "/system/app/Camera2/lib/arm/libjni_tinyplanet.so");
symlink("/system/lib/libopendelta.so", "/system/priv-app/OpenDelta/lib/arm/libopendelta.so");
symlink("/system/lib/libprintspooler_jni.so", "/system/app/PrintSpooler/lib/arm/libprintspooler_jni.so");
symlink("/system/lib/librsjni.so", "/system/app/Gallery2/lib/arm/librsjni.so");
symlink("/system/lib/libttscompat.so", "/system/app/PicoTts/lib/arm/libttscompat.so");
symlink("/system/lib/libttspico.so", "/system/app/PicoTts/lib/arm/libttspico.so");
symlink("/system/lib/libwebviewchromium.so", "/system/app/webview/lib/arm/libwebviewchromium.so");
symlink("Roboto-Bold.ttf", "/system/fonts/DroidSans-Bold.ttf");
symlink("Roboto-Regular.ttf", "/system/fonts/DroidSans.ttf");
symlink("app_process32", "/system/bin/app_process");
symlink("busybox", "/system/xbin/[", "/system/xbin/[[",
        "/system/xbin/adjtimex", "/system/xbin/arp", "/system/xbin/ash",
        "/system/xbin/awk", "/system/xbin/base64", "/system/xbin/basename",
        "/system/xbin/bbconfig", "/system/xbin/blkid", "/system/xbin/blockdev",
        "/system/xbin/brctl", "/system/xbin/bunzip2", "/system/xbin/bzcat",
        "/system/xbin/bzip2", "/system/xbin/cal", "/system/xbin/cat",
        "/system/xbin/catv", "/system/xbin/chattr", "/system/xbin/chgrp",
        "/system/xbin/chmod", "/system/xbin/chown", "/system/xbin/chroot",
        "/system/xbin/clear", "/system/xbin/cmp", "/system/xbin/comm",
        "/system/xbin/cp", "/system/xbin/cpio", "/system/xbin/crond",
        "/system/xbin/crontab", "/system/xbin/cut", "/system/xbin/date",
        "/system/xbin/dc", "/system/xbin/dd", "/system/xbin/depmod",
        "/system/xbin/devmem", "/system/xbin/df", "/system/xbin/diff",
        "/system/xbin/dirname", "/system/xbin/dmesg", "/system/xbin/dnsd",
        "/system/xbin/dos2unix", "/system/xbin/du", "/system/xbin/echo",
        "/system/xbin/ed", "/system/xbin/egrep", "/system/xbin/env",
        "/system/xbin/expand", "/system/xbin/expr", "/system/xbin/false",
        "/system/xbin/fbsplash", "/system/xbin/fdisk", "/system/xbin/fgrep",
        "/system/xbin/find", "/system/xbin/flash_lock",
        "/system/xbin/flash_unlock", "/system/xbin/flashcp",
        "/system/xbin/flock", "/system/xbin/fold", "/system/xbin/free",
        "/system/xbin/freeramdisk", "/system/xbin/fstrim", "/system/xbin/fsync",
        "/system/xbin/ftpget", "/system/xbin/ftpput", "/system/xbin/fuser",
        "/system/xbin/getopt", "/system/xbin/grep", "/system/xbin/groups",
        "/system/xbin/gunzip", "/system/xbin/gzip", "/system/xbin/halt",
        "/system/xbin/head", "/system/xbin/hexdump", "/system/xbin/id",
        "/system/xbin/ifconfig", "/system/xbin/inetd", "/system/xbin/insmod",
        "/system/xbin/install", "/system/xbin/ionice", "/system/xbin/iostat",
        "/system/xbin/ip", "/system/xbin/kill", "/system/xbin/killall",
        "/system/xbin/killall5", "/system/xbin/less", "/system/xbin/ln",
        "/system/xbin/losetup", "/system/xbin/ls", "/system/xbin/lsattr",
        "/system/xbin/lsmod", "/system/xbin/lsusb", "/system/xbin/lzcat",
        "/system/xbin/lzma", "/system/xbin/lzop", "/system/xbin/lzopcat",
        "/system/xbin/man", "/system/xbin/md5sum", "/system/xbin/mesg",
        "/system/xbin/mkdir", "/system/xbin/mke2fs", "/system/xbin/mkfifo",
        "/system/xbin/mkfs.ext2", "/system/xbin/mkfs.vfat",
        "/system/xbin/mknod", "/system/xbin/mkswap", "/system/xbin/mktemp",
        "/system/xbin/modinfo", "/system/xbin/modprobe", "/system/xbin/more",
        "/system/xbin/mount", "/system/xbin/mountpoint", "/system/xbin/mpstat",
        "/system/xbin/mv", "/system/xbin/nanddump", "/system/xbin/nandwrite",
        "/system/xbin/nbd-client", "/system/xbin/netstat", "/system/xbin/nice",
        "/system/xbin/nohup", "/system/xbin/nslookup", "/system/xbin/ntpd",
        "/system/xbin/od", "/system/xbin/patch", "/system/xbin/pgrep",
        "/system/xbin/pidof", "/system/xbin/ping", "/system/xbin/pipe_progress",
        "/system/xbin/pkill", "/system/xbin/pmap", "/system/xbin/poweroff",
        "/system/xbin/printenv", "/system/xbin/printf", "/system/xbin/ps",
        "/system/xbin/pstree", "/system/xbin/pwd", "/system/xbin/pwdx",
        "/system/xbin/rdev", "/system/xbin/readlink", "/system/xbin/realpath",
        "/system/xbin/renice", "/system/xbin/reset", "/system/xbin/resize",
        "/system/xbin/rev", "/system/xbin/rm", "/system/xbin/rmdir",
        "/system/xbin/rmmod", "/system/xbin/route", "/system/xbin/run-parts",
        "/system/xbin/rx", "/system/xbin/sed", "/system/xbin/seq",
        "/system/xbin/setconsole", "/system/xbin/setserial",
        "/system/xbin/setsid", "/system/xbin/sh", "/system/xbin/sha1sum",
        "/system/xbin/sha256sum", "/system/xbin/sha3sum",
        "/system/xbin/sha512sum", "/system/xbin/sleep", "/system/xbin/sort",
        "/system/xbin/split", "/system/xbin/stat", "/system/xbin/strings",
        "/system/xbin/stty", "/system/xbin/sum", "/system/xbin/swapoff",
        "/system/xbin/swapon", "/system/xbin/sync", "/system/xbin/sysctl",
        "/system/xbin/tac", "/system/xbin/tail", "/system/xbin/tar",
        "/system/xbin/taskset", "/system/xbin/tee", "/system/xbin/telnet",
        "/system/xbin/telnetd", "/system/xbin/test", "/system/xbin/tftp",
        "/system/xbin/tftpd", "/system/xbin/time", "/system/xbin/timeout",
        "/system/xbin/top", "/system/xbin/touch", "/system/xbin/tr",
        "/system/xbin/traceroute", "/system/xbin/true", "/system/xbin/ttysize",
        "/system/xbin/tune2fs", "/system/xbin/umount", "/system/xbin/uname",
        "/system/xbin/uncompress", "/system/xbin/unexpand", "/system/xbin/uniq",
        "/system/xbin/unix2dos", "/system/xbin/unlzma", "/system/xbin/unlzop",
        "/system/xbin/unxz", "/system/xbin/unzip", "/system/xbin/uptime",
        "/system/xbin/usleep", "/system/xbin/uudecode", "/system/xbin/uuencode",
        "/system/xbin/vi", "/system/xbin/watch", "/system/xbin/wc",
        "/system/xbin/wget", "/system/xbin/which", "/system/xbin/whoami",
        "/system/xbin/xargs", "/system/xbin/xz", "/system/xbin/xzcat",
        "/system/xbin/yes",
        "/system/xbin/zcat");
symlink("dalvikvm32", "/system/bin/dalvikvm");
symlink("libGLESv2.so", "/system/lib/libGLESv3.so");
symlink("mount.exfat", "/system/bin/fsck.exfat",
        "/system/bin/mkfs.exfat");
symlink("toolbox", "/system/bin/cat", "/system/bin/chcon",
        "/system/bin/chmod", "/system/bin/chown", "/system/bin/clear",
        "/system/bin/cmp", "/system/bin/cp", "/system/bin/date",
        "/system/bin/dd", "/system/bin/df", "/system/bin/dmesg",
        "/system/bin/du", "/system/bin/getenforce", "/system/bin/getevent",
        "/system/bin/getprop", "/system/bin/getsebool", "/system/bin/grep",
        "/system/bin/hd", "/system/bin/id", "/system/bin/ifconfig",
        "/system/bin/iftop", "/system/bin/insmod", "/system/bin/ioctl",
        "/system/bin/ionice", "/system/bin/kill", "/system/bin/ln",
        "/system/bin/load_policy", "/system/bin/log", "/system/bin/ls",
        "/system/bin/lsmod", "/system/bin/lsof", "/system/bin/md5",
        "/system/bin/mkdir", "/system/bin/mknod", "/system/bin/mkswap",
        "/system/bin/mount", "/system/bin/mv", "/system/bin/nandread",
        "/system/bin/netstat", "/system/bin/newfs_msdos", "/system/bin/nohup",
        "/system/bin/notify", "/system/bin/printenv", "/system/bin/prlimit",
        "/system/bin/ps", "/system/bin/r", "/system/bin/readlink",
        "/system/bin/renice", "/system/bin/restorecon", "/system/bin/rm",
        "/system/bin/rmdir", "/system/bin/rmmod", "/system/bin/route",
        "/system/bin/runcon", "/system/bin/schedtop", "/system/bin/sendevent",
        "/system/bin/setenforce", "/system/bin/setprop",
        "/system/bin/setsebool", "/system/bin/sleep", "/system/bin/smd",
        "/system/bin/start", "/system/bin/stop", "/system/bin/swapoff",
        "/system/bin/swapon", "/system/bin/sync", "/system/bin/top",
        "/system/bin/touch", "/system/bin/umount", "/system/bin/uptime",
        "/system/bin/vmstat", "/system/bin/watchprops",
        "/system/bin/wipe");

#-- Set Permissions --#
ui_print("");
ui_print("Setting permissions.....");
set_metadata_recursive("/system", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/bin", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/app_process32", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:zygote_exec:s0");
set_metadata("/system/bin/bootanimation", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:bootanim_exec:s0");
set_metadata("/system/bin/clatd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:clatd_exec:s0");
set_metadata("/system/bin/debuggerd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:debuggerd_exec:s0");
set_metadata("/system/bin/dex2oat", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:dex2oat_exec:s0");
set_metadata("/system/bin/dhcpcd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:dhcp_exec:s0");
set_metadata("/system/bin/dnsmasq", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:dnsmasq_exec:s0");
set_metadata("/system/bin/drmserver", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:drmserver_exec:s0");
set_metadata("/system/bin/dumpstate", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:dumpstate_exec:s0");
set_metadata("/system/bin/hostapd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:hostapd_exec:s0");
set_metadata("/system/bin/installd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:installd_exec:s0");
set_metadata("/system/bin/keystore", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:keystore_exec:s0");
set_metadata("/system/bin/lmkd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:lmkd_exec:s0");
set_metadata("/system/bin/logd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:logd_exec:s0");
set_metadata("/system/bin/mdnsd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:mdnsd_exec:s0");
set_metadata("/system/bin/mediaserver", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:mediaserver_exec:s0");
set_metadata("/system/bin/mtpd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:mtp_exec:s0");
set_metadata("/system/bin/netcfg", "uid", 0, "gid", 3003, "mode", 02750, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/netd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:netd_exec:s0");
set_metadata("/system/bin/patchoat", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:dex2oat_exec:s0");
set_metadata("/system/bin/ping", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/pppd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:ppp_exec:s0");
set_metadata("/system/bin/racoon", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:racoon_exec:s0");
set_metadata("/system/bin/rild", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:rild_exec:s0");
set_metadata("/system/bin/run-as", "uid", 0, "gid", 2000, "mode", 0750, "capabilities", 0xc0, "selabel", "u:object_r:runas_exec:s0");
set_metadata("/system/bin/sdcard", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:sdcardd_exec:s0");
set_metadata("/system/bin/servicemanager", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:servicemanager_exec:s0");
set_metadata("/system/bin/sh", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:shell_exec:s0");
set_metadata("/system/bin/surfaceflinger", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:surfaceflinger_exec:s0");
set_metadata("/system/bin/tf_daemon", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:tee_exec:s0");
set_metadata("/system/bin/uncrypt", "uid", 0, "gid", 0, "mode", 0750, "capabilities", 0x0, "selabel", "u:object_r:uncrypt_exec:s0");
set_metadata("/system/bin/vdc", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:vdc_exec:s0");
set_metadata("/system/bin/vold", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:vold_exec:s0");
set_metadata("/system/bin/wpa_supplicant", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:wpa_exec:s0");
set_metadata("/system/etc/dhcpcd/dhcpcd-run-hooks", "uid", 1014, "gid", 2000, "mode", 0550, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/etc/init.d", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/etc/init.d", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/etc/ppp", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0555, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/vendor", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/etc/audio_effects.conf", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/vendor/firmware", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware/bcm4330", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/lib/libbt-vendor.so", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/lib/mediadrm/libdrmclearkeyplugin.so", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/xbin", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/xbin/librank", "uid", 0, "gid", 0, "mode", 06755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/xbin/procmem", "uid", 0, "gid", 0, "mode", 06755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/xbin/procrank", "uid", 0, "gid", 0, "mode", 06755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/xbin/su", "uid", 0, "gid", 2000, "mode", 04750, "capabilities", 0x0, "selabel", "u:object_r:su_exec:s0");

#-- Finish Installing SU properly --#
ui_print("Installing SuperSU and Root.....");
package_extract_dir("extras/superuser/script", "/tmp");
set_perm(0, 0, 0777, "/tmp/install-su.sh");
run_program ("/tmp/install-su.sh");
set_metadata("/system/xbin/su", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/.ext/.su", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/xbin/daemonsu", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/xbin/sugote", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:zygote_exec:s0");
set_metadata("/system/xbin/supolicy", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/xbin/sugote-mksh", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/etc/install-recovery.sh", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:toolbox_exec:s0");
set_metadata("/system/etc/.installed_su_daemon", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/app_process32_original", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:zygote_exec:s0");
set_metadata("/system/bin/app_process_init", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");

set_progress(0.99);
ui_print("Finalising ROM.....");

#-- DATA2SD --#
if
	file_getprop("/tmp/aroma-data/kernel.prop","selected.2") == "2"
then
	ui_print("Installing pre-init script for DATA2SD");
	package_extract_dir("extras/kernel/preinit", "/system");
	package_extract_dir("extras/kernel/static_busybox/system", "/system");
	set_perm(0, 0, 0744, "/system/boot/preinit");
	set_perm(0, 0, 0744, "/system/boot/busybox");
	set_perm_recursive(0, 0, 0755, 0755, "/system/boot/preinit.d");
	ui_print("==*******************************************************==");
	ui_print("==*RECOVERY LEFT IN DATA2SD MODE UNTIL REBOOT*==");
	ui_print("==*******************************************************==");
endif;

#-- ROM2SD preinit --#
if
    file_getprop("/tmp/aroma-data/kernel.prop","selected.2") == "3"
then
	# Extract ramdisk from kernel image to external /system/boot
	ui_print("Extracting kernel ramdisk for ROM2SD.....");
	package_extract_dir("extras/kernel/rom2sd/bin", "/tmp");
	set_perm(0, 0, 0755, "/tmp/extract-ramdisk");
	set_perm(0, 0, 0755, "/tmp/extract-ramdisk.sh");
	run_program("/tmp/extract-ramdisk.sh");
	# Install extra files to external /system/boot/ramdisk
	package_extract_dir("extras/kernel/rom2sd/ramdisk", "/system/boot/ramdisk");
	# Copy modules back from /tmp to external /system/lib/modules
	ui_print("Copy saved internal modules back to ROM2SD.....");
	run_program("/tmp/copy_modules.sh");
	# Install _thatv10 stock kernel to internal if stock rom upgrade needed
	if
		file_getprop("/tmp/aroma-data/that.prop","upgrade") == "yes"
	then
		ui_print("_that kernel installed to Internal ROM.....");
		package_extract_file("extras/kernel/thatstock/kernel-that11.blob", "/dev/block/mmcblk0p4");
	endif;
	ui_print("==*******************************************************==");
	ui_print("==*RECOVERY LEFT IN ROM2SD MODE UNTIL REBOOT*==");
	ui_print("==*******************************************************==");
endif;

#_that init10 preinit scripts
if
	file_getprop("/tmp/aroma-data/kernel.prop","selected.1") != "5"
then
	if
		file_getprop("/tmp/aroma-data/kernel.prop","selected.2") != "3"
	then
		# _that kernel preinit.cfg setup for internal /system
		# Install static-busybox
		package_extract_dir("extras/kernel/static_busybox/system", "/system");
		set_perm(0, 0, 0744, "/system/boot/busybox");
		# Install preinit
		if
			file_getprop("/tmp/aroma-data/kernel.prop","selected.2") == "2"
		then
			# DATA2SD
			ui_print(" - data2sd pre-init scripts");
			package_extract_dir("extras/kernel/data2sd/system", "/system");
		else
			if
				file_getprop("/tmp/aroma-data/kernel.prop","selected.1") == "4"
			then
				# Internal kernel
				ui_print(" - internal pre-init scripts");
				package_extract_dir("extras/kernel/thatcm11/preinit", "/system");
			endif;
		endif;
		package_extract_dir("extras/kernel/preinit", "/system");
		set_perm(0, 0, 0744, "/system/boot/preinit");
		set_perm_recursive(0, 0, 0755, 0755, "/system/boot/preinit.d");
		if
			file_getprop("/tmp/aroma-data/kernel.prop","selected.1") == "4"
		then
			# Additional preinit scripts
			ui_print(" - Additional_that internal pre-init scripts");
			package_extract_dir("extras/kernel/thatcm11/preinit/boot/preinit.d", "/system/boot/preinit.d");
			set_perm_recursive(0, 0, 0755, 0755, "/system/boot/preinit.d");			
			# _that kernel CPU Performance
			ui_print(" - Performance Mode:");
			if
				file_getprop("/tmp/aroma-data/cpu.prop","performance") == "p1800"
			then
				# 1800
				ui_print("   - 1.8GHz");
				package_extract_dir("extras/cpu/p1800", "/tmp");
			endif;
			if
				file_getprop("/tmp/aroma-data/cpu.prop","performance") == "p1700"
			then
				# 1700
				ui_print("   - 1.7GHz");
				package_extract_dir("extras/cpu/p1700", "/tmp");
			endif;
			if
				file_getprop("/tmp/aroma-data/cpu.prop","performance") == "p1600"
			then
				# 1600
				ui_print("   - 1.6GHz");
				package_extract_dir("extras/cpu/p1600", "/tmp");
			endif;
			if
				file_getprop("/tmp/aroma-data/cpu.prop","performance") == "p1500"
			then
				# 1500
				ui_print("   - 1.5GHz");
				package_extract_dir("extras/cpu/p1500", "/tmp");
			endif;
			if
				file_getprop("/tmp/aroma-data/cpu.prop","performance") == "p1400"
			then
				# 1400
				ui_print("   - 1.4GHz");
				package_extract_dir("extras/cpu/p1400", "/tmp");
			endif;
			if
				file_getprop("/tmp/aroma-data/cpu.prop","performance") == "p1300"
			then
				# 1300
				ui_print("   - 1.3GHz");
				package_extract_dir("extras/cpu/p1300", "/tmp");
			endif;
			
			# _that kernel OC Switch
			if
				file_getprop("/tmp/aroma-data/cpu.prop","poc") == "1"
			then
				# OC Enabled
				ui_print("   - OC Enabled");
				package_extract_dir("extras/cpu/cpuoc", "/tmp");
			else
				# OC Disabled
				ui_print("   - OC Disabled");
				package_extract_dir("extras/cpu/cpunoc", "/tmp");
			endif;
			
			# Amend the preinit.cfg file with chosen speeds
			set_perm(0, 0, 0777, "/tmp/cpup.sh");
			run_program ("/tmp/cpup.sh");
			set_perm(0, 0, 0777, "/tmp/cpuoc.sh");
			run_program ("/tmp/cpuoc.sh");
		endif;
	endif;
endif;

unmount("/data");
unmount("/system");
set_progress(1.0);
ui_print("All Done!");
ui_print("Enjoy ZOMBi-POP!");
